# This file configures the analyzer, which statically analyzes Dart code to
# check for errors, warnings, and lints.
#
# The issues identified by the analyzer are surfaced in the UI of Dart-enabled
# IDEs (https://dart.dev/tools#ides-and-editors). The analyzer can also be
# invoked from the command line by running `flutter analyze`.

# The following line activates a set of recommended lints for Flutter apps,
# packages, and plugins designed to encourage good coding practices.
include: package:flutter_lints/flutter.yaml

analyzer:
  exclude:
    - "**/*.g.dart"
    - "**/*.freezed.dart"
    - "**/*.mocks.dart"
  errors:
    invalid_annotation_target: ignore
  strong-mode:
    implicit-casts: false
    implicit-dynamic: false

linter:
  # The lint rules applied to this project can be customized in the
  # section below to disable rules from the `package:flutter_lints/flutter.yaml`
  # included above or to enable additional rules. A list of all available lints
  # and their documentation is published at https://dart.dev/lints.
  #
  # Instead of disabling a lint rule for the entire project in the
  # section below, it can also be suppressed for a single line of code
  # or a specific dart file by using the `// ignore: name_of_lint` and
  # `// ignore_for_file: name_of_lint` syntax on the line or in the file
  # producing the lint.
  rules:
    # Error rules
    always_use_package_imports: true
    avoid_dynamic_calls: true
    avoid_empty_else: true
    avoid_print: true
    avoid_relative_lib_imports: true
    avoid_returning_null_for_future: true
    avoid_slow_async_io: true
    avoid_type_to_string: true
    cancel_subscriptions: true
    close_sinks: true
    comment_references: true
    literal_only_boolean_expressions: true
    no_adjacent_strings_in_list: true
    test_types_in_equals: true
    throw_in_finally: true
    unnecessary_statements: true

    # Style rules
    always_declare_return_types: true
    always_put_control_body_on_new_line: true
    avoid_implementing_value_types: true
    avoid_positional_boolean_parameters: true
    directives_ordering: true
    prefer_const_constructors: true
    prefer_const_declarations: true
    prefer_final_fields: true
    prefer_final_locals: true
    prefer_interpolation_to_compose_strings: true
    prefer_single_quotes: true
    sort_constructors_first: true
    unawaited_futures: true
    unnecessary_lambdas: true
    unnecessary_parenthesis: true
    use_super_parameters: true

    # Documentation rules
    package_api_docs: true
    public_member_api_docs: true

    # Clean Architecture specific rules
    avoid_classes_with_only_static_members: true # Prefer proper DI
    avoid_private_typedef_functions: true # Better for clean interfaces
    prefer_void_to_null: true # More explicit for use cases
    type_annotate_public_apis: true # Better domain modeling

# Additional information about this file can be found at
# https://dart.dev/guides/language/analysis-options
